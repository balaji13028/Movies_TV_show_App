//buildscript {
//    ext.kotlin_version = '2.0.0'
//    repositories {
//        google()
//        mavenCentral()
//        gradlePluginPortal()
//        maven { url "https://maven.aliyun.com/repository/jcenter" }
//    }
//
//    dependencies {
//        classpath 'com.android.tools.build:gradle:7.3.0'
//        // START: FlutterFire Configuration
//        classpath 'com.google.gms:google-services:4.3.15'
//        // END: FlutterFire Configuration
//        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
//    }
//
//    ext {
//        billingClientVersion = "7.0.0" // âœ… Minimum required
//    }
//}
//
//allprojects {
//    repositories {
//        google()
//        mavenCentral()
//        gradlePluginPortal()
//        maven { url "https://maven.aliyun.com/repository/jcenter" }
//    }
//}
//
//rootProject.buildDir = '../build'
//
//
//subprojects {
//    project.buildDir = "${rootProject.buildDir}/${project.name}"
//    project.evaluationDependsOn(':app')
//}
//
//tasks.register("clean", Delete) {
//    delete rootProject.buildDir
//}


allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

rootProject.buildDir = '../build'

subprojects {
    project.buildDir = "${rootProject.buildDir}/${project.name}"

    // Ensure the :app project is evaluated first (if you have multiple modules)
    project.evaluationDependsOn(':app')

    // Directly configure Android-specific settings
//    if (project.hasProperty('android')) {
//        project.afterEvaluate {
//            // Access the android block after the project is evaluated
//            project.android {
//                // Set ABI filters directly in the defaultConfig block
//                defaultConfig {
//                    ndk {
//                        abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
//                    }
//                }
//
//                // Set the namespace only if it's not already set
//                if (project.namespace == null) {
//                    namespace = project.group
//                }
//            }
//        }
//    }
}

tasks.register("clean", Delete) {
    delete rootProject.buildDir
}
